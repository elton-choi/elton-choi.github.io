<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Choi&#39;s Blog about Robotics</title>
    <link>https://elton-choi.github.io/</link>
    <description>Recent content on Choi&#39;s Blog about Robotics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hancheol Choi</copyright>
    <lastBuildDate>Mon, 15 Aug 2022 21:48:13 +0900</lastBuildDate><atom:link href="https://elton-choi.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About me</title>
      <link>https://elton-choi.github.io/about/</link>
      <pubDate>Sat, 17 Sep 2022 12:23:37 +0900</pubDate>
      
      <guid>https://elton-choi.github.io/about/</guid>
      <description>LinkdIn Github</description>
    </item>
    
    <item>
      <title>Mujoco Tutorial</title>
      <link>https://elton-choi.github.io/posts/2022-08-15-mujoco-tutorial/</link>
      <pubDate>Mon, 15 Aug 2022 21:48:13 +0900</pubDate>
      
      <guid>https://elton-choi.github.io/posts/2022-08-15-mujoco-tutorial/</guid>
      <description>Mujoco  Multi-Joint dynamics with Contact Freely available by DeepMind in October 2021 Key-Features  Generalized coordinates combined with modern contact dynamics Soft, convex and analytically-invertable contact dynamics Tendon geometry General actuation model Reconfigurable computation pipeline Interactive simulation and visualization    C/C++ Library Install Download archive files and extract where you want.
Just add library path on your environment.
ex) edit ~/.bashrc on linux. if folder you extract is mujoco</description>
    </item>
    
    <item>
      <title>&#39;넷플릭스, 지구상 가장 빠르고 유연한 기업의 비밀: 규칙 없음&#39; 을 읽고</title>
      <link>https://elton-choi.github.io/posts/2020-12-30-netflix/</link>
      <pubDate>Wed, 30 Dec 2020 21:48:13 +0900</pubDate>
      
      <guid>https://elton-choi.github.io/posts/2020-12-30-netflix/</guid>
      <description>넷플릭스라는 브랜드는 어렴풋이 언론을 통해 매우 빠르게 성장한 혁신적인 기업으로 알고 있었다. 하지만, 이 회사의 업이 &amp;lsquo;동영상 스트리밍 서비스&amp;rsquo; 기에 여기에 뭔가 혁신적이고 특별한 것이 있을까 하고 내심 크게 관심을 두지 않았었다. 개인적으로는 한 때 미국 전화 영어 선생님이 하도 넷플릭스, 넷플릭스 하길래 귀찮아서 가입을 하게 되었지만, 첫인상은 홈페이지가 깔끔하다, 다른 동영상 스트리밍 서비스에 비해 끊기지 않는다, 화질이 매우 좋다 정도였다. 사실, 딱히 추천 시스템이 인상적이라거나 내가 주로 관심을 두는 테크 영역에서 뛰어나다는 인상은 받지 못했다.</description>
    </item>
    
    <item>
      <title>&#39;나는 아마존에서 미래를 다녔다&#39;를 읽고</title>
      <link>https://elton-choi.github.io/posts/2020-03-01-amazon/</link>
      <pubDate>Sun, 01 Mar 2020 21:48:13 +0900</pubDate>
      
      <guid>https://elton-choi.github.io/posts/2020-03-01-amazon/</guid>
      <description>나에게 아마존이라는 기업은 구글이나 애플에 비해서 이미지가 화려하지는 않았다. 특히, 처음에는 전자 상거래로 알게 되었고, 킨들이라는 제품을 한번쯤 찾아본 적이 있을 뿐, 혁신이나 IT와는 거리가 먼 줄 알았다. 하지만, 언젠가부터 구글이나 애플보다 아마존이라는 기업이 더 크게 될 거라는 뉴스 제목을 보기도 했고, 엘론 머스크의 SpaceX처럼 우주 산업도 하고 있다고 하고, 지금은 이름에 걸맞게 거대한 회사다. 아마존하면 지독하게 강렬한 생명력 아닌가..
그런 아마존에서 12년간 생존한 개발자의 에세이를 읽었다. 말 그대로 생존기였다. 저자는 자신의 말에 따르면 개발 천재도 아니고, 엄청난 노력가도 아니지만, 아마존에서 생존하면서 많은 것을 배웠고, 아마존을 나와서도 아마존에 관련된 사업을 할 정도로 그의 인생에서 아마존은 큰 부분을 차지했다.</description>
    </item>
    
    <item>
      <title>로봇팔 제어 소개</title>
      <link>https://elton-choi.github.io/posts/2018-12-31-introduction-to-robot-arm-control/</link>
      <pubDate>Mon, 31 Dec 2018 21:48:13 +0900</pubDate>
      
      <guid>https://elton-choi.github.io/posts/2018-12-31-introduction-to-robot-arm-control/</guid>
      <description>2018년 모두의 연구소에서 주최한 MODUCON에서 로봇팔 제어 겉핥기란 주제로 발표했던 자료다.
모두의 연구소에서 강남Dynamics 랩을 운영한지는 2016년 9월부터이다. 모두의 연구소는 원래 그 해 5월 정도에 강화학습 스터디에 참석하기 위해서 찾아갔었는데, 거기서 만난 분에게 떠밀려 로봇 제어 쪽 모임을 시작하게 되었고 랩짱까지 되었다. 그 분은 다시 강화학습 분야로 돌아갔지만 나는 지금까지 계속 이 모임을 유지하고 있다. (내가 왜 그랬을까..)
요즘 딥러닝, 강화학습 등이 너무나도 핫하고 로보틱스 쪽까지 융합되는 모습을 보면서 가끔씩 그때 그냥 강화학습을 했으면 어땠을까 하는 생각이 들기도 하지만, 그랬다면 이렇게 깊이 있게 로보틱스를 공부할 수 있었을까 하는 의구심도 있고, 한 분야를 깊게 공부하면 딥러닝이나 강화학습 또한 잘 이해할 수 있을 것이란 생각도 든다.</description>
    </item>
    
    <item>
      <title>Dynamic allocation of Eigen in hard-real time environment</title>
      <link>https://elton-choi.github.io/posts/2014-02-27-dynamic-allocation-eigen/</link>
      <pubDate>Thu, 27 Feb 2014 21:48:13 +0900</pubDate>
      
      <guid>https://elton-choi.github.io/posts/2014-02-27-dynamic-allocation-eigen/</guid>
      <description>Eigen is a open-source, template-based, c++, matrix library. It has good balance between performance and ease-of-use. We can write matrix formulation intuitively as similar as in Matlab.
Futhermore, Eigen has Geometry module which others don&amp;rsquo;t have. Especially, I like this feature since I can use quaternion, angle-axis, transformation matrix in robotics application.
However, though above good features, We could get unexpected behavior if we don&amp;rsquo;t take care of using Eigen in hard real-time environment.</description>
    </item>
    
  </channel>
</rss>
